aggregator:
  defaults: plan/defaults/aggregator.yaml
  template: openfl.component.Aggregator
  settings:
    init_state_path: save/fl_post_two_init.pbuf
    best_state_path: save/fl_post_two_best.pbuf
    last_state_path: save/fl_post_two_last.pbuf
    rounds_to_train: 2
    admins_endpoints_mapping:
      col1@example.com:
        - GetExperimentStatus
        - SetStragglerCuttoffTime

collaborator:
  defaults: plan/defaults/collaborator.yaml
  template: openfl.component.Collaborator
  settings:
    delta_updates: false
    opt_treatment: CONTINUE_LOCAL

data_loader:
  defaults: plan/defaults/data_loader.yaml
  template: src.nnunet_dummy_dataloader.NNUNetDummyDataLoader
  settings:
    p_train: 0.8

# TODO: make checkpoint-only truly generic and create the task runner within src
task_runner:
  defaults: plan/defaults/task_runner.yaml
  template: src.runner_nnunetv1.PyTorchNNUNetCheckpointTaskRunner
  settings:
    device: cuda
    gpu_num_string: "0"
    nnunet_task: Task537_FLPost

network:
  defaults: plan/defaults/network.yaml
  settings: {}

assigner:
  defaults: plan/defaults/assigner.yaml
  template: openfl.component.assigner.DynamicRandomGroupedAssigner
  settings:
    task_groups:
      - name: train_and_validate
        percentage: 1.0
        tasks:
          # - aggregated_model_validation
          - train
          # - locally_tuned_model_validation

tasks:
  defaults: plan/defaults/tasks_torch.yaml
  train:
    function: train
    kwargs:
      metrics:
        - train_loss
        - val_eval
      epochs: 1

compression_pipeline:
  defaults: plan/defaults/compression_pipeline.yaml

straggler_handling_policy:
  template: openfl.component.straggler_handling_functions.CutoffTimeBasedStragglerHandling
  settings:
    straggler_cutoff_time: 600
    minimum_reporting: 2
