name: Integration-workflow-GCP-gha

on: pull_request  

jobs:
  setup:
    name: gcp-deploy
    runs-on: ubuntu-latest
    env:
      REGION: us-west1
      ARTIFACT_REGISTRY_DOMAIN: docker.pkg.dev
      REPO_NAME: medperf-repo
      IMAGE_NAME: medperf-api-gha-ci
      SERVICE_NAME: medperf-api-gha-ci
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up cloud sdk
      uses: google-github-actions/setup-gcloud@v0
    
    - name: Configure docker
      run: gcloud auth configure-docker ${{ env.REGION }}-${{ env.ARTIFACT_REGISTRY_DOMAIN }} --quiet

    - name: Set server environment vars
      working-directory: ./server
      run: cp .env.example .env

    - name: Set SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Build container image
      working-directory: ./server
      run: docker build -t ${{ env.REGION }}-${{ env.ARTIFACT_REGISTRY_DOMAIN }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} -f Dockerfile.gha .

    - name: Push container image
      run: docker push ${{ env.REGION }}-${{ env.ARTIFACT_REGISTRY_DOMAIN }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
    
    - name: Deploy service to cloud run
      run: gcloud run deploy ${{ env.SERVICE_NAME }}-pr-${{ github.event.number }} --image ${{ env.REGION }}-${{ env.ARTIFACT_REGISTRY_DOMAIN }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} --region ${{ env.REGION }} --platform managed --allow-unauthenticated --min-instances 1

    - name: Get service url
      run: echo "DEPLOY_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }}-pr-${{ github.event.number }} --region ${{ env.REGION }} --format 'value(status.url)')"  >> $GITHUB_ENV

    - name: Run integration tests
      working-directory: ./server
      run: pip install -r test-requirements.txt --user && python seed.py --server ${{ env.DEPLOY_URL }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f cli/requirements.txt ]; then pip install -e cli; fi

    - name: Install Docker
      run: |
        sudo apt-get update -y
        sudo apt-get install \
        ca-certificates \
        curl \
        gnupg \
        lsb-release -y
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get install moby-engine moby-cli containerd.io


    - name: Run client integration tests
      working-directory: ./cli
      run: sh cli.sh -s ${{ env.DEPLOY_URL }} -d ~ -u admin -p admin

    - name: Delete service
      run: gcloud run services delete ${{ env.SERVICE_NAME }}-pr-${{ github.event.number }} --region ${{ env.REGION }} --quiet
