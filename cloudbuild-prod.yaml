#The script is invoked manually with all settings provided in the secret
#It assumes that DB is created before the script run
#Inorder to deploy a service, pass sha-id of the already built image 
#Command:  gcloud builds submit --config=cloudbuild-prod.yaml --substitutions=SHORT_SHA=<sha-id>
steps:
  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    dir: "server"
    args:
      [
        "-i",
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "-e",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "-e",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  - id: "collect static"
    name: "gcr.io/google-appengine/exec-wrapper"
    dir: "server"
    args:
      [
        "-i",
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "-e",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "-e",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "--verbosity",
        "2",
        "--no-input",
      ]

  - id: "deploy cloud run"
    name: "gcr.io/cloud-builders/gcloud"
    args: 
      [
        "run", 
        "deploy", 
        "${_CLOUD_RUN_SERVICE_NAME}", 
        "--platform", 
        "managed", 
        "--region", 
        "${_REGION}", 
        "--image", 
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}", 
        "--add-cloudsql-instances", 
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "--set-env-vars",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "--set-env-vars",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "--set-env-vars",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--allow-unauthenticated",
        "--min-instances",
        "${_CLOUD_RUN_MIN_INSTANCES}"
      ]
      
substitutions:
  _REGION: us-west1
  _ARTIFACT_REGISTRY_DOMAIN: docker.pkg.dev
  _REPO_NAME: medperf-repo
  _IMAGE_NAME: medperf-api
  _CLOUD_RUN_SERVICE_NAME: medperf-api-cb-prod
  _CLOUD_RUN_MIN_INSTANCES: '1'
  _SECRET_SETTINGS_NAME: django-prod-settings
  _SQL_INSTANCE_NAME: medperf-dev
  ##Settings specific for Prod##
  ##All DB settings are picked from the secret if _GCP_CI_CLOUDBUILD is set to False
  _GCP_CI_CLOUDBUILD: 'False'
  #_GCP_CI_DATABASE_NAME: None 
  _GCP_CI_DATABASE_URL: None

options:
  dynamic_substitutions: true
